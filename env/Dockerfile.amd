FROM oraclelinux:8 AS oracle8

# ---------------------------------- Installing dependencies as root ---------------------------------- 
RUN dnf install -y epel-release git cmake3 gcc-c++ gcc binutils \
compat-openssl10 libX11-devel libXpm-devel libXft-devel libXext-devel \ 
gsl-devel openssl-devel wget bzip2-devel libffi-devel xz-devel sqlite-devel \
ncurses ncurses-devel make xz libzstd libzstd-devel which rsync \
nmap-ncat chrony

RUN dnf install -y oracle-epel-release-el8
RUN dnf config-manager --enable ol8_codeready_builder
RUN dnf install -y hdf5 hdf5-devel


# ---------------------------------- Create user ---------------------------------- 
RUN useradd worker
USER worker
WORKDIR /home/worker
RUN mkdir -p /home/worker/dependencies

SHELL ["/bin/bash", "--login", "-c"]

user root 

#AMD
#COPY ./Anaconda3-2023.07-2-Linux-x86_64.sh .
RUN wget https://repo.anaconda.com/archive/Anaconda3-2023.07-2-Linux-x86_64.sh 
RUN chmod +x Anaconda3-2023.07-2-Linux-x86_64.sh 
RUN ./Anaconda3-2023.07-2-Linux-x86_64.sh -b -p /opt/conda 
RUN rm Anaconda3-2023.07-2-Linux-x86_64.sh

RUN mkdir -p /home/worker/worker-env 
COPY conda/environment.yml worker-env
COPY venv/requirements.amd.txt worker-env

USER worker

RUN export PATH=$PATH:/opt/conda/bin && conda config --append channels conda-forge && conda config --set channel_priority strict &&  conda env create -n worker -f /home/worker/worker-env/environment.yml

RUN export PATH=$PATH:/opt/conda/bin && source activate worker && cd /home/worker/worker-env/ && pip3 install -r requirements.amd.txt

USER root
RUN  mkdir /shared_dir
RUN chown -R worker:worker /shared_dir
RUN  mkdir /data01
RUN chown -R worker:worker /data01
RUN  mkdir /data02
RUN chown -R worker:worker /data02

COPY ./entrypoint.sh /home/worker/entrypoint.sh
RUN chmod +x /home/worker/entrypoint.sh

USER worker
RUN mkdir /home/worker/workspace
ENV PATH="/opt/conda/bin:$PATH"
#ENTRYPOINT ["bash", "/home/worker/entrypoint.sh"]
