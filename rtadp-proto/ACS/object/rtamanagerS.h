// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.6
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_codegen.cpp:445

#ifndef _TAO_IDL__TMP__RTAMANAGERS_H_
#define _TAO_IDL__TMP__RTAMANAGERS_H_


#include "rtamanagerC.h"
#include "acscommonS.h"
#include "acscomponentS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
// TAO_IDL - Generated from
// /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_RTAMANAGER_DATAPROCESSOR__SARG_TRAITS_)
#define _RTAMANAGER_DATAPROCESSOR__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::rtamanager::DataProcessor>
    : public Object_SArg_Traits_T<
        ::rtamanager::DataProcessor_ptr,
        ::rtamanager::DataProcessor_var,
        ::rtamanager::DataProcessor_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class SArg_Traits< ::rtamanager::Commands>
    : public
        Basic_SArg_Traits_T<
            ::rtamanager::Commands,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_RTAMANAGER_COMMANDER__SARG_TRAITS_)
#define _RTAMANAGER_COMMANDER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::rtamanager::Commander>
    : public Object_SArg_Traits_T<
        ::rtamanager::Commander_ptr,
        ::rtamanager::Commander_var,
        ::rtamanager::Commander_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_rtamanager
{
  

  
  // TAO_IDL - Generated from
  // /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class DataProcessor;
  typedef DataProcessor *DataProcessor_ptr;

  class  DataProcessor
    : public virtual POA_ACS::ACSComponent
  {
  protected:
    DataProcessor ();
  
  public:
    /// Useful for template programming.
    typedef ::rtamanager::DataProcessor _stub_type;
    typedef ::rtamanager::DataProcessor_ptr _stub_ptr_type;
    typedef ::rtamanager::DataProcessor_var _stub_var_type;

    DataProcessor (const DataProcessor& rhs);
    virtual ~DataProcessor () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::rtamanager::DataProcessor *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void configure (
      const char * jsonStaticConfiguration) = 0;

    static void configure_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  
  // TAO_IDL - Generated from
  // /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class Commander;
  typedef Commander *Commander_ptr;

  class  Commander
    : public virtual POA_ACS::ACSComponent
  {
  protected:
    Commander ();
  
  public:
    /// Useful for template programming.
    typedef ::rtamanager::Commander _stub_type;
    typedef ::rtamanager::Commander_ptr _stub_ptr_type;
    typedef ::rtamanager::Commander_var _stub_var_type;

    Commander (const Commander& rhs);
    virtual ~Commander () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::rtamanager::Commander *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void configure (
      const char * jsonStaticConfiguration) = 0;

    static void configure_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void sendCommand (
      ::rtamanager::Commands command,
      const char * destProcessorName) = 0;

    static void sendCommand_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };


// TAO_IDL - Generated from
// /alma/ACS-2023AUG/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module rtamanager

#endif /* ifndef */

